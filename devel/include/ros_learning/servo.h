// Generated by gencpp from file ros_learning/servo.msg
// DO NOT EDIT!


#ifndef ROS_LEARNING_MESSAGE_SERVO_H
#define ROS_LEARNING_MESSAGE_SERVO_H

#include <ros/service_traits.h>


#include <ros_learning/servoRequest.h>
#include <ros_learning/servoResponse.h>


namespace ros_learning
{

struct servo
{

typedef servoRequest Request;
typedef servoResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct servo
} // namespace ros_learning


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_learning::servo > {
  static const char* value()
  {
    return "019706110004b728d56d8baaa8e32797";
  }

  static const char* value(const ::ros_learning::servo&) { return value(); }
};

template<>
struct DataType< ::ros_learning::servo > {
  static const char* value()
  {
    return "ros_learning/servo";
  }

  static const char* value(const ::ros_learning::servo&) { return value(); }
};


// service_traits::MD5Sum< ::ros_learning::servoRequest> should match
// service_traits::MD5Sum< ::ros_learning::servo >
template<>
struct MD5Sum< ::ros_learning::servoRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_learning::servo >::value();
  }
  static const char* value(const ::ros_learning::servoRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_learning::servoRequest> should match
// service_traits::DataType< ::ros_learning::servo >
template<>
struct DataType< ::ros_learning::servoRequest>
{
  static const char* value()
  {
    return DataType< ::ros_learning::servo >::value();
  }
  static const char* value(const ::ros_learning::servoRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_learning::servoResponse> should match
// service_traits::MD5Sum< ::ros_learning::servo >
template<>
struct MD5Sum< ::ros_learning::servoResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_learning::servo >::value();
  }
  static const char* value(const ::ros_learning::servoResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_learning::servoResponse> should match
// service_traits::DataType< ::ros_learning::servo >
template<>
struct DataType< ::ros_learning::servoResponse>
{
  static const char* value()
  {
    return DataType< ::ros_learning::servo >::value();
  }
  static const char* value(const ::ros_learning::servoResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_LEARNING_MESSAGE_SERVO_H
